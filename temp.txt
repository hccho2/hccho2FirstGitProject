chat bot
http://yujuwon.tistory.com/entry/TENSORFLOW-seq2seq-%EA%B8%B0%EB%B0%98-%EC%B1%97%EB%B4%87-%EB%A7%8C%EB%93%A4%EA%B8%B0



tf.reset_default_graph()

x_data = np.array([[0, 3, 1, 2, 4],[1, 3, 1, 2, 3],[2, 4, 0, 2, 4]], dtype=np.int32)
init = np.arange(30).reshape(5,-1)
print(x_data.shape)
sess = tf.InteractiveSession()
batch_size = len(x_data)
hidden_dim =5
num_layers = 2
seq_length = x_data.shape[1]
with tf.variable_scope('test',reuse=tf.AUTO_REUSE) as scope:
    # Make rnn
    cells = []
    for _ in range(num_layers):
        cell = tf.contrib.rnn.BasicRNNCell(num_units=hidden_dim)
        cells.append(cell)
    cell = tf.contrib.rnn.MultiRNNCell(cells)    
    
    
    embedding = tf.get_variable("embedding", initializer=init.astype(np.float32),dtype = tf.float32)
    inputs = tf.nn.embedding_lookup(embedding, x_data)
    
    
    
    initial_state = cell.zero_state(batch_size, tf.float32)
    inputs = tf.split(inputs,seq_length,1)
    inputs = [tf.squeeze(input_,[1]) for input_ in inputs]
    
    outputs, last_state =  tf.contrib.legacy_seq2seq.rnn_decoder(inputs,initial_state,cell)
    
    
    
    
    sess.run(tf.global_variables_initializer())
    print(sess.run(initial_state))
    print(outputs)
    print(sess.run(outputs))
