h = [1, 0, 0, 0]
e = [0, 1, 0, 0]
l = [0, 0, 1, 0]
o = [0, 0, 0, 1]

tf.reset_default_graph()

x_data = np.array([[h, e, l, l, o]], dtype=np.float32)
x_data2 = np.array([[0, 3, 1, 2, 4],[1, 3, 1, 2, 3],[2, 4, 0, 2, 4],[2, 4, 0, 2, 4],[2, 3, 0, 2, 4],[2, 3, 0, 2, 4]], dtype=np.int32)
init = np.arange(30).reshape(5,-1)
print(x_data2.shape)
sess = tf.InteractiveSession()

with tf.variable_scope('test',reuse=tf.AUTO_REUSE) as scope:
    embedding = tf.get_variable("embedding", initializer=init)
    inputs = tf.nn.embedding_lookup(embedding, x_data2)
    
    
    sess.run(tf.global_variables_initializer())
    print(embedding)
    print("inputs",inputs)
    
    print(sess.run(embedding))
    print(sess.run(inputs))
	
  
  
(6, 5)
<tf.Variable 'test/embedding:0' shape=(5, 6) dtype=int64_ref>
inputs Tensor("test/embedding_lookup:0", shape=(6, 5, 6), dtype=int64)
[[ 0  1  2  3  4  5]
 [ 6  7  8  9 10 11]
 [12 13 14 15 16 17]
 [18 19 20 21 22 23]
 [24 25 26 27 28 29]]
 
 
 
[[[ 0  1  2  3  4  5]
  [18 19 20 21 22 23]
  [ 6  7  8  9 10 11]
  [12 13 14 15 16 17]
  [24 25 26 27 28 29]]

 [[ 6  7  8  9 10 11]
  [18 19 20 21 22 23]
  [ 6  7  8  9 10 11]
  [12 13 14 15 16 17]
  [18 19 20 21 22 23]]

 [[12 13 14 15 16 17]
  [24 25 26 27 28 29]
  [ 0  1  2  3  4  5]
  [12 13 14 15 16 17]
  [24 25 26 27 28 29]]

 [[12 13 14 15 16 17]
  [24 25 26 27 28 29]
  [ 0  1  2  3  4  5]
  [12 13 14 15 16 17]
  [24 25 26 27 28 29]]

 [[12 13 14 15 16 17]
  [18 19 20 21 22 23]
  [ 0  1  2  3  4  5]
  [12 13 14 15 16 17]
  [24 25 26 27 28 29]]

 [[12 13 14 15 16 17]
  [18 19 20 21 22 23]
  [ 0  1  2  3  4  5]
  [12 13 14 15 16 17]
  [24 25 26 27 28 29]]]
