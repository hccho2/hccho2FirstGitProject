np.set_printoptions(threshold=np.nan)  <--- 모든 data 다 표시
np.set_printoptions(precision=4)  <--- 유효숫자 표시
np.set_printoptions(suppress=True) <----- e없이 표시
====================================================================
import ctypes  # An included library with Python install.
def Mbox(title, text, style):
    ctypes.windll.user32.MessageBoxW(0, text, title, style)
====================================================================
np.shape ==> (n1-axis=0,n2-axis=1,n3-axis=2,...)
np.sum(x, axis=n) ==>  axis n 이 없으짐
===================================================================
np.squeeze(x) <== Remove single-dimensional entries from the shape of an array
np.expand_dims <== Insert a new axis, corresponding to a given position in the array shape
===================================================================
a=[1,1,2,2]
a= list(map((lambda x: x*x),a))
===================================================================
# Symmetric Matrix는 singular value = eigenvalue
# np.linalg의 첫번째  return  U의 열vector가 eigenvector에 해당함.


import numpy as np
np.set_printoptions(threshold=np.nan)
#a = np.random.randint(10, size=(9, 6))
#a =np.array([[0, 9, 7, 9, 1, 6],
#       [2, 3, 7, 8, 9, 6],
#       [2, 3, 4, 5, 9, 4],
#       [5, 8, 0, 3, 9, 5],
#       [7, 9, 9, 8, 4, 1],
#       [2, 7, 8, 2, 0, 0],
#       [8, 7, 0, 4, 8, 3],
#       [9, 2, 3, 8, 3, 0],
#       [6, 6, 2, 0, 9, 0]])


a =np.array([[5,-7,7],[4,-3,4],[4,-1,2]])
a = a.T.dot(a)

U, s, V = np.linalg.svd(a, full_matrices=True)

UU, ss, VV = np.linalg.svd(a, full_matrices=False) # "numerical recipes" 는 False에 해당하는 것을 구현

w,z = np.linalg.eig(a)

=====================================================================================
def f(x):
    return x+10

# make another list from a list
A = [1,2,3,4]
A2=[[1,2],[3,4],[5,6]]
#B = [x*10 for x in A]
#B = [f(x) for x in A]

#B = list(map(lambda x: x*10,A))
B = list(map(f,A))

df = pd.DataFrame(A2, columns=['age','age2'])
df['age']= df['age'].apply(f)
=====================================================================================

=====================================================================================

=====================================================================================

=====================================================================================

=====================================================================================

=====================================================================================

=====================================================================================

=====================================================================================

=====================================================================================

