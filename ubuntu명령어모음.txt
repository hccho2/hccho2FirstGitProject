> sudo 명령어
> sudo su ---> super user로 전환


jobs
kill -9 %1

--- 
디렉토리 삭제 > rm -r 디렉토리명
하위디렉토리 포함 삭제 > rm -rf ./money
디렉토리 복사 > cp -r dir1  /home/xxx/
cp -r /home/datasets/st_ko/v1_64  /home/hccho2/datasets


--- 디렉토리 복사
cp -r a /test/b/      또는 cp -r a /test/b
1. /test 폴더가 없으면 오류.
2. /test/b 폴더가 없으면 a폴더를 test폴더 아래에 b라는 이름으로 복사. => /test/b
3. /test/b 폴더가 있으면 a폴더를 b폴더 아래에 복사. => /test/b/a


----
디렉토리 파일 갯수 세기: > ls 디렉토리명 | wc -l 

-----
파일 이동  ---> 디렉토리는 미리 만들어져 있어야 한다.
> mv filename 디렉토리명/

------
파일명 변경
> mv a.txt b.txt
---------

eg.
!mkdir ./data/
!mkdir -p ./train/audio/   <----- multiple path
!mv wiki_corpus.txt ./data/
----

watch -n 1 -d nvidia-smi   (-d: 차이나는 부분에 highlight)


cd /media/hccho/hccho
/media/hccho/hccho/hccho/CommonDataset


apt --installed list
apt remove 패키지이름


df -h   <---- 디스크 용량 확인



홈 디렉토리: /home/hccho

.bashrc에 추가:
alias tf='source activate tf14'
alias torch='source activate torch12'
alias da='source deactivate'
alias jn='jupyter notebook'
alias wn='watch -n 1 -d nvidia-smi'
alias cls='clear'





ssh로 다른 서버 접속하기
> ssh -X id@domoin.com


# 소문자 엘RS
!ls -lRS

#############
> wget URL
> wget -O save_filename URL
> wget -c URL    <------------- 이어 받기

=====
>curl -LO https://goo.gl/oLusMz   ---> wget, curl에 옵션 없이 안될 때.... 
-LO 옵션   -L(redirection URL 로 따라간다.) -O(file 저장시 remote 의 file 이름으로 저장한다. -o 옵션보다 편리하다.)

##############################################################################
screen 
> CUDA_VISIBLE_DEVICES=0 screen -L screenlog.large20200827 python3 run_pretraining.py --data-dir gs://data-for-electra/v1-512  --model-name large-20200827
> screen -L -Logfile screenlog.1115 python3 train.py --train_data /home/hccho2/datasets/data_lmdb_release/training 
> 
-Logfile이 있어야 되는 경우도 있고, 있으면 에러나는 경우도 있다.

1. detach   ===> ctrl+a, d
2. screen -list  ==> 목록확인
3. screen -r  ===> screen이 1개 밖에 없으면 자동 연결
   scrren -r 이름 
 4. screen 속에서는 exit로 종료.

>hccho2@hccho100:~/electra-google-research$ screen -list
There is a screen on:
        8462.pts-1.hccho100     (08/27/2020 02:59:52 AM)        (Detached)
1 Socket in /run/screen/S-hccho2.

>screen -r 8    ---> 이름 중에서 첫 글자만 입력해도 된다.
==============
> screen    --> screen 실행 ----> 작업 수행.... --> ctrl + a, d로 detach
> 바깥에서 screen -ls  --> 작업 종류확인
> screen -r 로 attatch  또는 screen -R 작업명(screen -ls에서 확인 한 것)
> 작업중인 screen을 종료하려면, 그 속에서 >exit

> pkill screen   --- 강제 죵료
##############################################################################
바로가기 만들기:
> ln -s target-directory 바로가기 이름
> ln -s /data xxx   ====> xxx라는 이름으로 /data에 대한 바로가기가 생성된다.

또는 왼쪽alt + 왼쪽마우스를 눌러 드래그, 왼쪽alt  누른채로, 마우스를 놓으면, 바로가기 메뉴 보임.
##############################################################################
vscode 설치 또는 업데이트 위해, deb파일 다운로드
code_1.48.2-1598353430_amd64.deb


> sudo dpkg -i code*.deb
> sudo apt purge code & sudo apt autoremove  <------  vscode  제거하기(vscode의 이름이 code임)


=======================================
> find / -name xxx.txt
> find ~ -name *.pt -type d           ---> -type d는 디렉토리를 의미함.
=========================================
> tar -xvf (파일명).tar.xz
> tar -zxf (파일명).tar.xz   <---- v(verbose), z옵션(압축할 때, gzip을 사용해 압축 (그냥 tar보다 압축률이 좋음)
> tar –zxf aa.tar.gz –C ./temp   <----------- C는 change directory(만들어져 있어야 한다)
====================================
디렉토리 압축
> zip xxx.zip -r 디렉토리_이름/*
> !zip -s 100m -o pytorch_model.zip ./nsmc-finetuning/pytorch_model.bin    <---- 분할 압축

==========================================

==========================================

==========================================

==========================================
==========================================
==========================================
==========================================
==========================================
==========================================
==========================================
==========================================
==========================================
==========================================
==========================================
